name: production_server_publish
on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
    
    - name: dotnet Clean
      run: dotnet clean src/CriThink.sln
      
    - name: dotnet Restore dependencies
      run: dotnet restore src/CriThink.sln

    - name: dotnet Build
      run: dotnet build src/CriThink.sln -c Release --no-restore

    - name: dotnet Publish
      run: |
        dotnet publish src/CriThink.Server/CriThink.Server.Web/CriThink.Server.Web.csproj -c Release -o production_crithink_server --self-contained false -r linux-x64
        
    - name: Build deployment package
      run: cd production_crithink_server && zip -r production-server-deploy-package.zip * && cd .
      
    - name: Copy deployment package
      uses: canastro/copy-file-action@master
      with:
        source: "production_crithink_server/production-server-deploy-package.zip"
        target: "production-server-deploy-package.zip"
    
    - name: Get timestamp
      uses: gerred/actions/current-time@master
      id: current-time
    
    - name: Run string replace
      uses: frabert/replace-string-action@master
      id: format-time
      with:
        pattern: '[:\.]+'
        string: "${{ steps.current-time.outputs.time }}"
        replace-with: '-'
        flags: 'g'

    - name: Deploy to AWS Beanstalk
      uses: einaregilsson/beanstalk-deploy@v10
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        region: ${{ secrets.AWS_REGION }}
        application_name: CriThink
        environment_name: Production
        version_label: "production-app-web-${{ steps.format-time.outputs.replaced }}"
        deployment_package: production-server-deploy-package.zip

    - name: Deployed successfully!
      run: echo Production App deployed to ELB      
    
