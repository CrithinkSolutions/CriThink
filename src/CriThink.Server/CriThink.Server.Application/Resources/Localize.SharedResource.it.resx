<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AQuestion" xml:space="preserve">
    <value>Accuracy: è il testo dell'articolo accurato? A volte errori grammaticali sono sinonimo di informazioni non accurate.</value>
  </data>
  <data name="Conspiracist" xml:space="preserve">
    <value>Cospirazionista</value>
  </data>
  <data name="DQuestion" xml:space="preserve">
    <value>Deceiving artefacts: l'articolo contiene immagini o video? Assicurati dell'originalità di questi contenuti, in quanto potrebbero essere manipolati o mostrare eventi o luoghi non correlati all'articolo.</value>
  </data>
  <data name="EQuestion" xml:space="preserve">
    <value>Evidence: l'autore dell'articolo fornisce prove a supporto del suo punto di vista?</value>
  </data>
  <data name="FakeNews" xml:space="preserve">
    <value>Notizie False</value>
  </data>
  <data name="HQuestion" xml:space="preserve">
    <value>Headlines: non contengono tutte le informazioni. Hai letto l'intero articolo?</value>
  </data>
  <data name="NewsSourceConspiracist" xml:space="preserve">
    <value>Queste fonti potrebbero pubblicare informazioni non verificabili e non supportate da evidenze scientifiche. Anzi, queste fonti di solito diffondono teorie cospirazioniste che attribuiscono la responsabilitá di eventi o situazioni a complotti messi in atto da sinistri gruppi politici molto potenti. Queste fonti potrebbero essere non affidabili, per questo, un ulteriore controllo della notizia é necessario.</value>
  </data>
  <data name="NewsSourceFakeNews" xml:space="preserve">
    <value>Le fonti in questa categoria mostrano un pregiudizio estremo, debolissimi collegamenti a fonti di informazione affidabili e una completa mancanza di trasparenza. Queste fonti pubblicano notizie false per trarre profitto sia economico che ideologico/politico e di conseguenza non sono affidabili.</value>
  </data>
  <data name="NewsSourceReliable" xml:space="preserve">
    <value>Queste fonti hanno minima parzialitá ed usano un linguaggio non carico emozionalmente, cosí da non cercare di influenzare il lettore tramite emozioni e stereotipi. Queste fonti di solito riportano le notizie in modo fattuale e credibile.</value>
  </data>
  <data name="NewsSourceSatirical" xml:space="preserve">
    <value>Queste fonti utilizzano esclusivamente lo humor, l’ironia o l’esagerazione per smascherare e criticare l’ingenuitá delle persone. Queste fonti sono molto attive soprattutto nel contesto politico contemporaneo ed altri argomenti di attualitá. In genere, queste fonti sono chiare sulla loro natura satirica.</value>
  </data>
  <data name="NewsSourceSocialMedia" xml:space="preserve">
    <value>I social media come Facebook e Twitter non possono essere categorizzati strettamente come fonti di informazione. In realtá queste piattaforme sono soltanto dei canali tramite I quali l’informazione puó essere trasmessa. In questi casi, é consigliato verificare l’affidabilitá dell’utente/pagina che condivide l’informazione.</value>
  </data>
  <data name="NewsSourceSuspicious" xml:space="preserve">
    <value>Queste fonti potrebbero pubblicare un mix di notizie false e notizie vere che sono riportate in modo da influenzare I lettori verso particolari argomenti. Per questo, le informazioni provenienti da queste fonti dovrebbero essere ricontrollate prima di essere condivise.</value>
  </data>
  <data name="Reliable" xml:space="preserve">
    <value>Affidabile</value>
  </data>
  <data name="Satirical" xml:space="preserve">
    <value>Satirico</value>
  </data>
  <data name="SocialMedia" xml:space="preserve">
    <value>Social MEdia</value>
  </data>
  <data name="Suspicious" xml:space="preserve">
    <value>Sospetto</value>
  </data>
  <data name="Unknown" xml:space="preserve">
    <value>Sconosciuto</value>
  </data>
</root>