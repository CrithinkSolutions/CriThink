<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutViewModel.LogoutErrorOk" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="AboutViewModel.AccountSettings" xml:space="preserve">
    <value>Account settings</value>
  </data>
  <data name="AboutViewModel.GetHelp" xml:space="preserve">
    <value>Get help</value>
  </data>
  <data name="AboutViewModel.GiveFeedback" xml:space="preserve">
    <value>Give us feedback</value>
  </data>
  <data name="AboutViewModel.HowWorks" xml:space="preserve">
    <value>How CriThink works</value>
  </data>
  <data name="AboutViewModel.InviteFriends" xml:space="preserve">
    <value>Invite friends</value>
  </data>
  <data name="AboutViewModel.Legal" xml:space="preserve">
    <value>Legal</value>
  </data>
  <data name="AboutViewModel.Logout" xml:space="preserve">
    <value>Log out</value>
  </data>
  <data name="AboutViewModel.LogoutCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="AboutViewModel.LogoutErrorMessage" xml:space="preserve">
    <value>Sorry, you can't log out right now</value>
  </data>
  <data name="AboutViewModel.LogoutMessage" xml:space="preserve">
    <value>Are you sure you want to log out?</value>
  </data>
  <data name="AboutViewModel.LogoutOk" xml:space="preserve">
    <value>Log out</value>
  </data>
  <data name="AboutViewModel.Notifications" xml:space="preserve">
    <value>Notifications</value>
  </data>
  <data name="AboutViewModel.PersonalInfo" xml:space="preserve">
    <value>Personal information</value>
  </data>
  <data name="AboutViewModel.PrivacySettings" xml:space="preserve">
    <value>Privacy settings</value>
  </data>
  <data name="AboutViewModel.Referrals" xml:space="preserve">
    <value>Referrals</value>
  </data>
  <data name="AboutViewModel.Support" xml:space="preserve">
    <value>Support</value>
  </data>
  <data name="AboutViewModel.ToS" xml:space="preserve">
    <value>Terms of Service</value>
  </data>
  <data name="AboutViewModel.Version" xml:space="preserve">
    <value>Version {0}</value>
  </data>
  <data name="AboutViewModel.ViewProfile" xml:space="preserve">
    <value>Show profile</value>
  </data>
  <data name="CheckNewsViewModel.FormatErrorMessage" xml:space="preserve">
    <value>The link you inserted is not valid.</value>
  </data>
  <data name="CheckNewsViewModel.FormatErrorOk" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="CheckNewsViewModel.NewsLinkHint" xml:space="preserve">
    <value>Search here</value>
  </data>
  <data name="CheckNewsViewModel.RecentSearch" xml:space="preserve">
    <value>Recent search</value>
  </data>
  <data name="ForgotPasswordViewModel.InsertEmail" xml:space="preserve">
    <value>Insert your email</value>
  </data>
  <data name="ForgotPasswordViewModel.RecoverPassword" xml:space="preserve">
    <value>Restore your password</value>
  </data>
  <data name="ForgotPasswordViewModel.Send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="LoginViewModel.EmailHint" xml:space="preserve">
    <value>Email or username</value>
  </data>
  <data name="LoginViewModel.Facebook" xml:space="preserve">
    <value>Continue with Facebook</value>
  </data>
  <data name="LoginViewModel.ForgotPassword" xml:space="preserve">
    <value>Forgot password?</value>
  </data>
  <data name="LoginViewModel.Google" xml:space="preserve">
    <value>Continue with Google</value>
  </data>
  <data name="LoginViewModel.Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LoginViewModel.PasswordHint" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="NewsCheckerResultViewModel.ClassificationHeader" xml:space="preserve">
    <value>We think this website is {0}</value>
  </data>
  <data name="NewsCheckerResultViewModel.RelatedDNews" xml:space="preserve">
    <value>You may also like..</value>
  </data>
  <data name="NewsCheckerResultViewModel.UnknownClassificationHeader" xml:space="preserve">
    <value>Unfortunately we didn't know this website yet.</value>
  </data>
  <data name="NewsCheckerResultViewModel.UnknownDescription" xml:space="preserve">
    <value>We are going to investigate this website and we will send you back an email with the result as soon as possible! Thank you!</value>
  </data>
  <data name="NewsCheckerViewModel.DebunkingNewsTitle" xml:space="preserve">
    <value>Latest Debunking News</value>
  </data>
  <data name="NewsCheckerViewModel.GoodAfternoon" xml:space="preserve">
    <value>Good afternoon</value>
  </data>
  <data name="NewsCheckerViewModel.GoodEvening" xml:space="preserve">
    <value>Good evening</value>
  </data>
  <data name="NewsCheckerViewModel.GoodMorning" xml:space="preserve">
    <value>Good morning</value>
  </data>
  <data name="NewsCheckerViewModel.GoodNight" xml:space="preserve">
    <value>Good night</value>
  </data>
  <data name="NewsCheckerViewModel.Motto" xml:space="preserve">
    <value>USE THE HEAD TODAY</value>
  </data>
  <data name="NewsCheckerViewModel.NewsLinkHint" xml:space="preserve">
    <value>Which news do you want to check?</value>
  </data>
  <data name="ProfileViewModel.Hello" xml:space="preserve">
    <value>Hi, I'm {0}</value>
  </data>
  <data name="ResetPasswordViewModel.ConfirmPasswordReset" xml:space="preserve">
    <value>Hey {0}, you have successfully reset your password</value>
  </data>
  <data name="ResetPasswordViewModel.ErrorPasswordReset" xml:space="preserve">
    <value>Sorry, we can't reset your password right now</value>
  </data>
  <data name="ResetPasswordViewModel.InsertPassword" xml:space="preserve">
    <value>Insert your new password</value>
  </data>
  <data name="ResetPasswordViewModel.RepeatPassword" xml:space="preserve">
    <value>Repeat the new password</value>
  </data>
  <data name="ResetPasswordViewModel.ResetPassword" xml:space="preserve">
    <value>Insert a new password</value>
  </data>
  <data name="ResetPasswordViewModel.Send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="SignUpEmailViewModel.ConfirmErrorMessage" xml:space="preserve">
    <value>Sorry but we can't confirm your email right now</value>
  </data>
  <data name="SignUpEmailViewModel.ConfirmWelcomeMessage" xml:space="preserve">
    <value>Hello {0}! You can now login</value>
  </data>
  <data name="SignUpEmailViewModel.EmailHint" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="SignUpEmailViewModel.ErrorMessage" xml:space="preserve">
    <value>Sorry but we can't complete the sign up now</value>
  </data>
  <data name="SignUpEmailViewModel.PasswordHint" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="SignUpEmailViewModel.RepeatPasswordHint" xml:space="preserve">
    <value>Repeat Password</value>
  </data>
  <data name="SignUpEmailViewModel.SignUp" xml:space="preserve">
    <value>Join Us!</value>
  </data>
  <data name="SignUpEmailViewModel.UsernameHint" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="SignUpEmailViewModel.WelcomeMessage" xml:space="preserve">
    <value>Thank you for joining us! We sent you an email with a confirmation link. Please click on that link and perform the login</value>
  </data>
  <data name="SignUpViewModel.AlreadyAccount" xml:space="preserve">
    <value>Already have an account?</value>
  </data>
  <data name="SignUpViewModel.Facebook" xml:space="preserve">
    <value>SignUp with Facebook</value>
  </data>
  <data name="SignUpViewModel.Google" xml:space="preserve">
    <value>SignUp with Google</value>
  </data>
  <data name="SignUpViewModel.Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="SignUpViewModel.SignUpCaption" xml:space="preserve">
    <value>It's easier to sign up now</value>
  </data>
  <data name="SignUpViewModel.SignUpEmail" xml:space="preserve">
    <value>SignUp with Email</value>
  </data>
  <data name="SignUpViewModel.SignUpTitle" xml:space="preserve">
    <value>Join Us</value>
  </data>
  <data name="WelcomeLoginSignInViewModel.Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="WelcomeLoginSignInViewModel.Motto" xml:space="preserve">
    <value>Use the HEAD!</value>
  </data>
  <data name="WelcomeLoginSignInViewModel.SignIn" xml:space="preserve">
    <value>Sign In</value>
  </data>
  <data name="NewsCheckerViewModel.SeeAll" xml:space="preserve">
    <value>View all</value>
  </data>
  <data name="DebunkingNewsListViewModel.Title" xml:space="preserve">
    <value>Debunking News</value>
  </data>
  <data name="SpotFakeNewsHomeViewModel.ADescription" xml:space="preserve">
    <value>ccuracy: is the text of the article accurate? Sometimes grammatical errors might mean the information is not accurate.</value>
  </data>
  <data name="SpotFakeNewsHomeViewModel.DDescription" xml:space="preserve">
    <value>eceiving artefacts: does the article contain any image or video? Check for the originality of such artefacts as they can be manipulated or show an unrelated event or place.</value>
  </data>
  <data name="SpotFakeNewsHomeViewModel.EDescription" xml:space="preserve">
    <value>vidence: does the author of the article present Evidence to support that particular point of view?</value>
  </data>
  <data name="SpotFakeNewsHomeViewModel.HDescription" xml:space="preserve">
    <value>eadlines do not contain the full story. Have you read the entire article?</value>
  </data>
  <data name="LoginViewModel.SocialLoginErrorMessage" xml:space="preserve">
    <value>An error occurred when logging in with {0}</value>
  </data>
  <data name="SignUpViewModel.LoginErrorMessage" xml:space="preserve">
    <value>An error occurred with {0}</value>
  </data>
  <data name="LoginViewModel.LoginErrorMessage" xml:space="preserve">
    <value>Incorrect email address or password. Please check and try again</value>
  </data>
  <data name="LoginViewModel.Pleasure" xml:space="preserve">
    <value>It's a pleasure to see you again</value>
  </data>
  <data name="LoginViewModel.WelcomeBack" xml:space="preserve">
    <value>Welcome Back</value>
  </data>
  <data name="SignUpEmailViewModel.SignUpEmailCaption" xml:space="preserve">
    <value>You will like it.</value>
  </data>
  <data name="SignUpEmailViewModel.SignUpEmailTitle" xml:space="preserve">
    <value>Welcome to the community</value>
  </data>
  <data name="HomeGameViewModel.Wip" xml:space="preserve">
    <value>Work in progress..</value>
  </data>
  <data name="HomeViewModel.FormatErrorMessage" xml:space="preserve">
    <value>The link you inserted is not valid.</value>
  </data>
  <data name="HomeViewModel.FormatErrorOk" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="ForgotPasswordViewModel.RequestErrorMessage" xml:space="preserve">
    <value>An error occurred while trying to reset your password. Please try again later</value>
  </data>
  <data name="ForgotPasswordViewModel.RequestErrorOk" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="ForgotPasswordViewModel.RequestMessage" xml:space="preserve">
    <value>We sent you an email with some instructions to follow to reset your password</value>
  </data>
  <data name="ForgotPasswordViewModel.RequestOk" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="CheckNewsViewModel.NewsSearch" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SignUpEmailViewModel.SelectAvatar" xml:space="preserve">
    <value>Select your avatar</value>
  </data>
</root>